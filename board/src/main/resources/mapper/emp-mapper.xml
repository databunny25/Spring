<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.emp.mapper.EmpMapper">
	<sql id="condition">
		<where>
 			<if test="vo.departmentId != null">
	 		 	DEPARTMENT_ID = #{departmentId} 			
 			</if>
 			<if test="vo.firstName != null">
 		   		AND FIRST_NAME = #{firstName} 			
 			</if>
 			<if test="vo.managerId != null">
 		   		AND MANAGER_ID = #{managerId} 			
 			</if>
 			<if test="svo.employeeIds != null">
				AND employee_id 
 				<foreach collection="svo.employeeIds" open="in (" close=")" separator="," item="empid">				
 					#{empid}
 				</foreach>
 			</if>
 		   </where>
	</sql>
	<resultMap type="EmpVO" id="empResultMap">
		<id property="employeeId" column="EMPLOYEE_ID"></id>
		<result property="firstName" column="FIRST_NAME" />
		<result property="phone" column="PHONE_NUMBER" />

	</resultMap>

	<select id="getEmpList" resultMap="empResultMap">
	select * from ( select rownum as rn, a.* from ( 
	
 		SELECT EMPLOYEE_ID
				,FIRST_NAME
				,LAST_NAME
				,EMAIL
				,PHONE_NUMBER "phone"
				,HIRE_DATE
				,JOB_ID
				,SALARY
				,COMMISSION_PCT
				,MANAGER_ID
				,DEPARTMENT_ID
 		  FROM employees e
		  <include refid="condition"></include> 			
 		 ORDER BY EMPLOYEE_ID DESC
 			
 	) a where rownum <![CDATA[<=]]> #{svo.end} ) b where rn >= #{svo.start}
	</select>
	
	<select id="getEmpInfo" 
	        parameterType="int" 
	        resultType="EmpVO">
		select *
		from employees
		where employee_id = #{employeeId}
	</select>
	
	<insert id="insertEmp" parameterType="EmpVO">
		<selectKey keyProperty="employeeId" order="BEFORE" resultType="int">
			select employees_seq.nextval from dual
		</selectKey>
		insert into employees 
						   	  ( EMPLOYEE_ID
						   	    ,FIRST_NAME
								,LAST_NAME
								,EMAIL
								,HIRE_DATE
								,JOB_ID
								<if test="salary!=null">,SALARY</if>
								,MANAGER_ID
								,DEPARTMENT_ID
								,PHOTO )
		values (
				#{employeeId}
				, #{firstName}
				, #{lastName}
				, #{email}
				, #{hireDate}
				, #{jobId}
				<if test="salary!=null">, #{salary}</if>
				, #{managerId}
				, #{departmentId}
				, #{photo}
				)	
	</insert>
	
	<delete id="deleteEmp" parameterType="int">
		delete employees 
		where employee_id = #{employeeId}
	</delete>
	
	<select id="getStat" resultType="map">
		select e.department_id, 
			   d.department_name "name", 
			   count(*) "cnt"
		  from employees e JOIN departments d
			ON e.department_id = d.department_id
		 where e.department_id is not null
	  GROUP BY e.department_id, department_name
	</select>
	
	<update id="updateEmp" parameterType="EmpVO">
		update employees
		set last_name=#{lastName}, 
			hire_date = #{hireDate},
			email = #{email}			
		where employee_id = #{employeeId}
	</update>
</mapper>